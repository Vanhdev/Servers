@{
    ViewBag.Title = "History";
}

<style>
    .body-content {
        padding-top: 20px;
    }
    .card-body {
        font-size: 12px;
        padding-top: 10px;
        padding-bottom: 10px;
    }
    table { width: 100%; }
    tr:nth-of-type(2n+1) {
        background-color: #eee;
    }
    th {
        color: #080;
        width: 80px;
        padding-left: 5px;
        font-weight: 500;
    }

    .row > .card {
        margin-right: 10px;
    }
    .row > .card > .card-body {
        max-height: 400px;
        overflow-y: auto;
    }
    .row > .collapsed-card {
        height: 45px;
    }

    @@media (max-width: 768px) {
        .row > .card {
            margin-right: 0;
        }
    }

</style>

<script>
    var data = @(new HtmlString(Model.ToString()));
    
    let map = {};
    let day = null;

    for (let month of Object.keys(data)) {
        for (const item of data[month]) {
            var d = item.Time.substr(0, 10);
            if (d != day) {
                map[day = d] = [];
            }
            map[day].push(item);
        }
    }
    let collapsed = false;

    var hisBody = new panel();
    for (var d in map) {
        var card = hisBody.child(new Card("warning card-outline col-md-4")
            .header(d)
            .collapse(collapsed));

        var lst = map[d];
        console.log(lst);

        var table = new tag("table");

        for (var i in lst) {
            var item = lst[i];
            var row = table.child(new tag("tr"));
            row.child(new tag("th").html(item.Time.substr(11, 8)));

            row.child(new tag("td").html(Object.keys(item.Content).join(", ")));

        }
        card.body(table);
        collapsed = true;
    }
   
    var main = new Card("primary card-outline")
        .header("History")
        .body(hisBody);
        
    render(main);
</script>

